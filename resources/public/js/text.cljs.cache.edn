;; Analyzed by ClojureScript 1.7.48
{:name text, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {syll-single syllab, orpho-single orphoep, -- orphoep, translit translit, sformat globals, ++ orphoep}, :requires {str clojure.string, clojure.string clojure.string, globals globals, syllab syllab, orphoep orphoep, translit translit}, :imports nil, :defs {set-of-vals {:protocol-inline nil, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 29, :column 7, :end-line 29, :end-column 18, :arglists (quote ([t]))}, :name text/set-of-vals, :variadic false, :file "target/classes/cljs/text.cljs", :end-column 18, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, bef {:name text/bef, :file "target/classes/cljs/text.cljs", :line 10, :column 1, :end-line 10, :end-column 9, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 10, :column 6, :end-line 10, :end-column 9}}, text-by-model {:protocol-inline nil, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 37, :column 7, :end-line 37, :end-column 20, :arglists (quote ([t s m]))}, :name text/text-by-model, :variadic false, :file "target/classes/cljs/text.cljs", :end-column 20, :method-params ([t s m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t s m]))}, test-set {:name text/test-set, :file "target/classes/cljs/text.cljs", :line 63, :column 1, :end-line 63, :end-column 14, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 63, :column 6, :end-line 63, :end-column 14}}, update-map-r {:protocol-inline nil, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 42, :column 7, :end-line 42, :end-column 19, :arglists (quote ([d i s n]))}, :name text/update-map-r, :variadic false, :file "target/classes/cljs/text.cljs", :end-column 19, :method-params ([d i s n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 4, :fn-var true, :arglists (quote ([d i s n]))}, ru-vows {:name text/ru-vows, :file "target/classes/cljs/text.cljs", :line 26, :column 1, :end-line 26, :end-column 13, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 26, :column 6, :end-line 26, :end-column 13}}, test-text {:name text/test-text, :file "target/classes/cljs/text.cljs", :line 62, :column 1, :end-line 62, :end-column 15, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 62, :column 6, :end-line 62, :end-column 15}}, tokenize {:protocol-inline nil, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([t stress]))}, :name text/tokenize, :variadic false, :file "target/classes/cljs/text.cljs", :end-column 15, :method-params ([t stress]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t stress]))}, text-stats {:protocol-inline nil, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 50, :column 7, :end-line 50, :end-column 17, :arglists (quote ([t s]))}, :name text/text-stats, :variadic false, :file "target/classes/cljs/text.cljs", :end-column 17, :method-params ([t s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t s]))}, tok-pat {:name text/tok-pat, :file "target/classes/cljs/text.cljs", :line 14, :column 8, :end-line 14, :end-column 20, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/text.cljs", :line 14, :column 13, :end-line 14, :end-column 20}}}}