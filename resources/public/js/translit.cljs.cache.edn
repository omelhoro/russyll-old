;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name translit, :imports nil, :requires {globals globals, orphoep orphoep}, :uses {-- orphoep, ++ orphoep}, :defs {palat-pat {:name translit/palat-pat, :file "target/classes/cljs/translit.cljs", :line 8, :column 1, :end-line 8, :end-column 15, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/translit.cljs", :line 8, :column 6, :end-line 8, :end-column 15}}, j-extract-pat {:name translit/j-extract-pat, :file "target/classes/cljs/translit.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/translit.cljs", :line 11, :column 6, :end-line 11, :end-column 19}}, j-test {:name translit/j-test, :file "target/classes/cljs/translit.cljs", :line 12, :column 1, :end-line 12, :end-column 12, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/translit.cljs", :line 12, :column 6, :end-line 12, :end-column 12}}, j-extract-fn {:protocol-inline nil, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/translit.cljs", :line 14, :column 7, :end-line 14, :end-column 19, :arglists (quote ([m]))}, :name translit/j-extract-fn, :variadic false, :file "target/classes/cljs/translit.cljs", :end-column 19, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, j-extract {:protocol-inline nil, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/translit.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([word]))}, :name translit/j-extract, :variadic false, :file "target/classes/cljs/translit.cljs", :end-column 16, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, palat-extract {:protocol-inline nil, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/translit.cljs", :line 26, :column 7, :end-line 26, :end-column 20, :arglists (quote ([word]))}, :name translit/palat-extract, :variadic false, :file "target/classes/cljs/translit.cljs", :end-column 20, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, translit {:protocol-inline nil, :meta {:file "/home/igorf/workspace/private/clojure/websyll/target/classes/cljs/translit.cljs", :line 29, :column 17, :end-line 29, :end-column 25, :export true, :arglists (quote ([word]))}, :name translit/translit, :variadic false, :file "target/classes/cljs/translit.cljs", :end-column 25, :method-params ([word]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}